#!/bin/bash

# Init install your applications

# ejecutador

# curl -sL https://github.com/fyndecolombia/larasail/archive/master.tar.gz | tar xz && source larasail-master/install && larasail setup && cd /var/www && curl -sL https://github.com/fyndecolombia/IngeBackend/archive/master.tar.gz | tar xz IngeBackend



#/
#--------------------------------------------------------------------------
# Install Larasail
#--------------------------------------------------------------------------
#
# This part of the script will move a few files to the necessary locations,
# add a new user 'larasail', and add aliases for the CLI
#
#/
# Installation
# SSH into your server and run the following command:

#curl -sL https://github.com/fyndecolombia/larasail/archive/master.tar.gz | tar xz && source larasail-master/install

#···· larasail setup
# You can make sure it’s installed by running:

# larasail -h
# Creating new Laravel project
# In order to create a new Laravel project just run the following command:

# cd /var/www && composer create-project laravel/laravel mywebsite
# Once you have your Laravel projected installed, LaraSail lets you also automate your Nginx server block creation.

# Creating new Nginx server block
# LaraSail also allows you to automate the set up of new Nginx Server Blocks in case that you need to host multiple Laravel applications on the same Droplet.

# To create a new Nginx server block run:

# larasail host mywebsite.com /var/www/mywebsite

# Move the files to /etc/.larasail and create a root larasail alias
mv larasail-master/key/* ~/.ssh/
chmod 700 ~/.ssh/fyndecol
chmod 700 ~/.ssh/fyndecol.pub
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/fyndecol
ssh-add ~/.ssh/fyndecol.pub

ssh -T git@github.com
# mv larasail-master/.larasail /etc/.larasail

# echo "alias larasail='sh /etc/.larasail/larasail'" >> /etc/bash.bashrc


# # Create a new password and create our new larasail user
# PASS=$(openssl rand -base64 32)
# useradd -G sudo -d /home/larasail -p $PASS -m larasail -s /bin/bash


# # Give the larasail user ability to not always require password
# echo 'larasail ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers


# # Turn on SSH Passwords
# # sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
# # echo -n 'AllowUsers larasail' >> /etc/ssh/sshd_config
# # service ssh reload  git clone git@github.com:fyndecolombia/IngeBackend.git



# # Store the larasail user password
# if [ ! -d /etc/.larasail/tmp ]; then
#   sudo mkdir /etc/.larasail/tmp
# fi
# sudo echo $PASS > /etc/.larasail/tmp/pass

# sudo chown -R larasail:larasail /etc/.larasail/tmp


# # Include our colors and format scripts
# . /etc/.larasail/includes/colors
# . /etc/.larasail/includes/format

# # Add larasail alias to larasail bashrc and the bin path dir for composer
# echo "alias larasail='sh /etc/.larasail/larasail'" >> /home/larasail/.bashrc
# echo "export PATH=~/.config/composer/vendor/bin:~/.composer/vendor/bin:\$PATH" >> /home/larasail/.bashrc



# # Show message after successfully installing
# setsailNoColor
# barNoColor
# echo "| Prepare the Sails, we're ready for the Open Sea!";
# barNoColor


# # Remove larasail folder pulled from git repo and switch user to larasail
# rm -rf larasail-master
# su - larasail


